{"version":3,"file":"static/js/410.dffd5712.chunk.js","mappings":"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","sources":["components/APIService/APIservice.jsx","webpack://react-homework-template/./src/components/Movies/Movies.css?c54a","components/Movies/Movies.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.css?2cba","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = 'd256ac876828e9bd801557ca6a813021';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const fetchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};","// extracted by mini-css-extract-plugin\nexport default {};","import { MoviesList } from '../MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByName } from '../APIService/APIservice';\nimport css from './Movies.css';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      if (!query) {\n        return;\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetchMoviesByName(query);\n        setMovies(response);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: searchQuery });\n    setSearchQuery('');\n  };\n\n  return (\n    <div className={css.moviesForm}>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your query here, please\"\n          value={searchQuery}\n          onChange={event => setSearchQuery(event.target.value)}\n        />\n        <button type=\"submit\">\n          Search\n        </button>\n      </form>\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>Error: {error.message}</p>\n      ) : (\n        <MoviesList movies={movies} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from '../MoviesList/MoviesList.css';\nimport defaultImage from '../images/notfound.jpg';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, name, title, poster_path }) => (\n        <li key={id} className={css.item}>\n          <Link\n            to={`/movies/${id}`}\n            state={{ from: location }}\n            className={css.link_movies}\n          >\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultImage\n              }\n              alt={title || name}\n              width=\"300\"\n              height=\"400\"\n            />\n            <span className={css.description}>{title || name}</span>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n"],"names":["movieApi","axios","baseURL","params","api_key","moviesFetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesByName","_ref2","_callee2","searchQuery","_context2","query","_x","fetchMovieById","_ref3","_callee3","id","_context3","concat","_x2","fetchMovieByCast","_ref4","_callee4","_context4","_x3","fetchMovieByReviews","_ref5","_callee5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","setSearchQuery","_useState3","_useState4","movies","setMovies","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","fetchMovie","t0","finish","_jsxs","className","css","children","onSubmit","event","preventDefault","_jsx","type","placeholder","value","onChange","target","message","MoviesList","location","useLocation","map","name","title","poster_path","Link","to","state","from","src","defaultImage","alt","width","height"],"sourceRoot":""}