{"version":3,"file":"static/js/373.4b185802.chunk.js","mappings":"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","sources":["components/APIService/APIservice.js","components/Movies/SearchForm.js","webpack://react-homework-template/./src/components/Movies/Movies.css?c54a","components/Movies/Movies.js","webpack://react-homework-template/./src/components/MoviesList/MoviesList.css?2cba","components/MoviesList/MoviesList.js"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = 'd256ac876828e9bd801557ca6a813021';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const fetchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};","import React from 'react';\n\nconst SearchForm = ({ handleSubmit, searchQuery, setSearchQuery }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Enter your query here, please\"\n        value={searchQuery}\n        onChange={event => setSearchQuery(event.target.value)}\n      />\n      <button type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;","// extracted by mini-css-extract-plugin\nexport default {};","import { MoviesList } from '../MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByName } from '../APIService/APIservice';\nimport SearchForm from './SearchForm';\nimport css from './Movies.css';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      if (!query) {\n        return;\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetchMoviesByName(query);\n        setMovies(response);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: searchQuery });\n    setSearchQuery('');\n  };\n\n  return (\n    <div className={css.moviesForm}>\n      <SearchForm\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n        handleSubmit={handleSubmit}\n      />\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>Error: {error.message}</p>\n      ) : (\n        <MoviesList movies={movies} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from '../MoviesList/MoviesList.css';\nimport defaultImage from '../images/notfound.jpg';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, name, title, poster_path }) => (\n        <li key={id} className={css.item}>\n          <Link\n            to={`/movies/${id}`}\n            state={{ from: location }}\n            className={css.link_movies}\n          >\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultImage\n              }\n              alt={title || name}\n              width=\"300\"\n              height=\"400\"\n            />\n            <span className={css.description}>{title || name}</span>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n"],"names":["movieApi","axios","baseURL","params","api_key","moviesFetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesByName","_ref2","_callee2","searchQuery","_context2","query","_x","fetchMovieById","_ref3","_callee3","id","_context3","concat","_x2","fetchMovieByCast","_ref4","_callee4","_context4","_x3","fetchMovieByReviews","_ref5","_callee5","_context5","_x4","handleSubmit","setSearchQuery","_jsxs","onSubmit","children","_jsx","type","placeholder","value","onChange","event","target","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","movies","setMovies","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","fetchMovie","t0","finish","className","css","SearchForm","preventDefault","message","MoviesList","location","useLocation","map","name","title","poster_path","Link","to","state","from","src","defaultImage","alt","width","height"],"sourceRoot":""}