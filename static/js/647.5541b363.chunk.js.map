{"version":3,"file":"static/js/647.5541b363.chunk.js","mappings":"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","sources":["components/APIService/APIservice.jsx","components/Pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = 'd256ac876828e9bd801557ca6a813021';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const fetchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};","import { fetchMovieByCast } from '../../APIService/APIservice';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport defaultImage from '../../images/notfound.jpg';\nimport './Cast.css';\n\nconst Cast = () => {\n  const { moviesId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const { cast } = await fetchMovieByCast(moviesId);\n        setCast(cast);\n      } catch ({ message }) {\n        console.log(message);\n      }\n    };\n\n    fetchCast();\n  }, [moviesId]);\n\n  if (!cast.length) {\n    return <p>No cast information available.</p>;\n  }\n\n  return (\n    <ul id='cUl'>\n      {cast.map(({ character, profile_path, name, id }) => (\n        <li key={id} id='cLi'>\n          <img\n            src={profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : defaultImage}\n            alt={`Depiction of ${name}`}\n            width=\"140\"\n            height=\"175\"\n          />\n          <div>\n            <h3>{name}</h3>\n            <h4>Character: </h4>\n            <p>{character}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["movieApi","axios","baseURL","params","api_key","moviesFetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesByName","_ref2","_callee2","searchQuery","_context2","query","_x","fetchMovieById","_ref3","_callee3","id","_context3","concat","_x2","fetchMovieByCast","_ref4","_callee4","_context4","_x3","fetchMovieByReviews","_ref5","_callee5","_context5","_x4","moviesId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_yield$fetchMovieByCa","_cast","message","t0","console","log","length","_jsx","children","map","character","profile_path","name","_jsxs","src","defaultImage","alt","width","height"],"sourceRoot":""}