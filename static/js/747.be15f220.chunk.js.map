{"version":3,"file":"static/js/747.be15f220.chunk.js","mappings":"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","sources":["components/APIService/APIservice.jsx","components/Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = 'd256ac876828e9bd801557ca6a813021';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const fetchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};","import { fetchMovieById } from '../../APIService/APIservice';\nimport { useEffect, useState } from 'react';\nimport image from '../../images/notfound.jpg';\nimport './MovieDetails.css';\nimport { Link, NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { moviesId } = useParams();\n  const location = useLocation();\n  const from = location.state?.from ?? '/';\n  const [movieById, setMovieById] = useState(null);\n\n  useEffect(() => {\n    fetchMovieById(moviesId)\n      .then(response => {\n        setMovieById(response);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n      });\n  }, [moviesId]);\n\n  if (!movieById) {\n    return <p>404 Not Found</p>;\n  }\n\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movieById;\n\n  return (\n    <div id='iDiv'>\n      <Link to={from}>Go back</Link>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : image\n          }\n          alt={title}\n          width=\"300\"\n          height=\"400\"\n        />\n        <div>\n          <h2>\n            {title}({new Date(release_date).getFullYear()})\n          </h2>\n          <p>User Score: {Math.floor(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres ? genres.map(genre => genre.name).join(' ') : '-'}</p>\n        </div>\n      </div>\n      <div>\n        <div id='bDiv'>\n          <NavLink to=\"cast\" state={{ from: from }}>\n            Cast\n          </NavLink>\n          <NavLink to=\"reviews\" state={{ from: from }}>\n            Reviews\n          </NavLink>\n        </div>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieApi","axios","baseURL","params","api_key","moviesFetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesByName","_ref2","_callee2","searchQuery","_context2","query","_x","fetchMovieById","_ref3","_callee3","id","_context3","concat","_x2","fetchMovieByCast","_ref4","_callee4","_context4","_x3","fetchMovieByReviews","_ref5","_callee5","_context5","_x4","_location$state$from","_location$state","moviesId","useParams","from","useLocation","state","_useState","useState","_useState2","_slicedToArray","movieById","setMovieById","useEffect","then","catch","message","console","log","_jsx","children","title","poster_path","release_date","vote_average","overview","genres","_jsxs","Link","to","src","image","alt","width","height","Date","getFullYear","Math","floor","map","genre","name","join","NavLink","Outlet"],"sourceRoot":""}