{"version":3,"file":"static/js/842.bd34b7be.chunk.js","mappings":"sSAIMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFb,EAASc,IAAI,sBAAsB,KAAD,EAA3C,OAARJ,EAAQC,EAAAI,KAAAJ,EAAAK,OAAA,SACPN,EAASO,KAAKC,SAAO,wBAAAP,EAAAQ,OAAA,GAAAV,EAAA,KAC7B,kBAHuB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAKXC,EAAiB,eAAAC,GAAAhB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgB,EAAMC,GAAW,IAAAf,EAAA,OAAAF,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACzBb,EAASc,IAAI,gBAAiB,CACnDX,OAAQ,CAAEwB,MAAOF,KAChB,KAAD,EAFY,OAARf,EAAQgB,EAAAX,KAAAW,EAAAV,OAAA,SAGPN,EAASO,KAAKC,SAAO,wBAAAQ,EAAAP,OAAA,GAAAK,EAAA,KAC7B,gBAL6BI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KAOjBQ,EAAc,eAAAC,GAAAvB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAuB,EAAMC,GAAE,IAAAtB,EAAA,OAAAF,IAAAA,MAAA,SAAAyB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACbb,EAASc,IAAI,UAADoB,OAAWF,IAAM,KAAD,EAArC,OAARtB,EAAQuB,EAAAlB,KAAAkB,EAAAjB,OAAA,SACPN,EAASO,MAAI,wBAAAgB,EAAAd,OAAA,GAAAY,EAAA,KACrB,gBAH0BI,GAAA,OAAAL,EAAAV,MAAA,KAAAC,UAAA,KAKde,EAAgB,eAAAC,GAAA9B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA8B,EAAMN,GAAE,IAAAtB,EAAA,OAAAF,IAAAA,MAAA,SAAA+B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACfb,EAASc,IAAI,UAADoB,OAAWF,EAAE,aAAY,KAAD,EAA7C,OAARtB,EAAQ6B,EAAAxB,KAAAwB,EAAAvB,OAAA,SACPN,EAASO,MAAI,wBAAAsB,EAAApB,OAAA,GAAAmB,EAAA,KACrB,gBAH4BE,GAAA,OAAAH,EAAAjB,MAAA,KAAAC,UAAA,KAKhBoB,EAAmB,eAAAC,GAAAnC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAmC,EAAMX,GAAE,IAAAtB,EAAA,OAAAF,IAAAA,MAAA,SAAAoC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EAClBb,EAASc,IAAI,UAADoB,OAAWF,EAAE,aAAY,KAAD,EAA7C,OAARtB,EAAQkC,EAAA7B,KAAA6B,EAAA5B,OAAA,SACPN,EAASO,MAAI,wBAAA2B,EAAAzB,OAAA,GAAAwB,EAAA,KACrB,gBAH+BE,GAAA,OAAAH,EAAAtB,MAAA,KAAAC,UAAA,I,yGCKhC,UAlCa,WACX,IAAAyB,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAiB9B,OAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAAnD,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAgD,EAAA,OAAAlD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOR,EAAAA,EAAAA,MAAc,KAAD,EAA9BK,EAAQC,EAAAI,KACdoC,EAAiBzC,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAgD,GAAAhD,EAAA,SAClB+C,EAAO/C,EAAAgD,GAAPD,QACTE,QAAQC,IAAIH,GAAS,QAED,OAFC/C,EAAAC,KAAA,GAErB2C,GAAa,GAAO5C,EAAAmD,OAAA,6BAAAnD,EAAAQ,OAAA,GAAAV,EAAA,wBAEvB,kBATgB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAWjBoC,GACF,GAAG,IAECH,GACKS,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAGPd,EAAce,QAKjBF,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACC,OAAQjB,OALfa,EAAAA,EAAAA,KAAA,KAAAC,SAAG,oBAQd,C,2ECnCA,GAAiB,E,kBCIJE,EAAa,SAAH5D,GAAoB,IAAd6D,EAAM7D,EAAN6D,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACEN,EAAAA,EAAAA,KAAA,MAAIO,UAAWC,EAAAA,KAASP,SACrBG,EAAOK,KAAI,SAAAjD,GAAA,IAAGS,EAAET,EAAFS,GAAIyC,EAAIlD,EAAJkD,KAAMC,EAAKnD,EAALmD,MAAOC,EAAWpD,EAAXoD,YAAW,OACzCZ,EAAAA,EAAAA,KAAA,MAAaO,UAAWC,EAAAA,KAASP,UAC/BY,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,GAAE,WAAA5C,OAAaF,GACf+C,MAAO,CAAEC,KAAMZ,GACfE,UAAWC,EAAAA,YAAgBP,SAAA,EAE3BD,EAAAA,EAAAA,KAAA,OACEkB,IACEN,EAAW,kCAAAzC,OAC2ByC,GAClCO,EAENC,IAAKT,GAASD,EACdW,MAAM,MACNC,OAAO,SAETtB,EAAAA,EAAAA,KAAA,QAAMO,UAAWC,EAAAA,YAAgBP,SAAEU,GAASD,QAhBvCzC,EAkBJ,KAIb,C","sources":["components/APIService/APIservice.jsx","components/Home/Home.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.css?2cba","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = 'd256ac876828e9bd801557ca6a813021';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const fetchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};","import { useState, useEffect } from 'react';\nimport { moviesFetch } from '../APIService/APIservice';\nimport { MoviesList } from '../MoviesList/MoviesList';\n\nconst Home = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await moviesFetch();\n        setTrendingFilms(response);\n      } catch ({ message }) {\n        console.log(message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (!trendingFilms.length) {\n    return <p>No movies found.</p>;\n  }\n\n  return (\n    <div>\n      <MoviesList movies={trendingFilms} />\n    </div>\n  );\n};\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from '../MoviesList/MoviesList.css';\nimport defaultImage from '../images/notfound.jpg';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, name, title, poster_path }) => (\n        <li key={id} className={css.item}>\n          <Link\n            to={`/movies/${id}`}\n            state={{ from: location }}\n            className={css.link_movies}\n          >\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultImage\n              }\n              alt={title || name}\n              width=\"300\"\n              height=\"400\"\n            />\n            <span className={css.description}>{title || name}</span>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n"],"names":["movieApi","axios","baseURL","params","api_key","moviesFetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesByName","_ref2","_callee2","searchQuery","_context2","query","_x","fetchMovieById","_ref3","_callee3","id","_context3","concat","_x2","fetchMovieByCast","_ref4","_callee4","_context4","_x3","fetchMovieByReviews","_ref5","_callee5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","trendingFilms","setTrendingFilms","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovies","message","t0","console","log","finish","_jsx","children","length","MoviesList","movies","location","useLocation","className","css","map","name","title","poster_path","_jsxs","Link","to","state","from","src","defaultImage","alt","width","height"],"sourceRoot":""}